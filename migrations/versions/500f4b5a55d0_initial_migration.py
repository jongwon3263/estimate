"""Initial migration

Revision ID: 500f4b5a55d0
Revises: 
Create Date: 2025-06-11 01:16:54.112775

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '500f4b5a55d0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('estimates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=10), nullable=True),
    sa.Column('customer_phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.Column('total_price', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_estimates'))
    )
    op.create_table('services',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_services'))
    )
    op.create_table('statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_statuses'))
    )
    op.create_table('taxes',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taxes'))
    )
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('service_id', sa.Text(), nullable=True),
    sa.Column('phone', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name=op.f('fk_companies_service_id_services')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_companies'))
    )
    op.create_table('estimate_services',
    sa.Column('estimate_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['estimate_id'], ['estimates.id'], name=op.f('fk_estimate_services_estimate_id_estimates')),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name=op.f('fk_estimate_services_service_id_services'))
    )
    op.create_table('service_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Text(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('per_pyeong', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name=op.f('fk_service_options_service_id_services')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_service_options'))
    )
    op.create_table('sites',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('district', sa.Text(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('residence_type', sa.Text(), nullable=True),
    sa.Column('room_size', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('depositor', sa.Text(), nullable=True),
    sa.Column('customer_phone', sa.Text(), nullable=True),
    sa.Column('customer_price', sa.Integer(), nullable=True),
    sa.Column('contract_deposit', sa.Integer(), nullable=True),
    sa.Column('remaining_balance', sa.Integer(), nullable=True),
    sa.Column('contract_date', sa.Date(), nullable=True),
    sa.Column('modify_date', sa.DateTime(), nullable=True),
    sa.Column('archive', sa.Integer(), nullable=True),
    sa.Column('tax_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['tax_id'], ['taxes.id'], name=op.f('fk_sites_tax_id_taxes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sites'))
    )
    op.create_table('estimate_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('estimate_id', sa.Integer(), nullable=False),
    sa.Column('service_option_id', sa.Integer(), nullable=False),
    sa.Column('pyeong', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['estimate_id'], ['estimates.id'], name=op.f('fk_estimate_items_estimate_id_estimates')),
    sa.ForeignKeyConstraint(['service_option_id'], ['service_options.id'], name=op.f('fk_estimate_items_service_option_id_service_options')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_estimate_items'))
    )
    op.create_table('works',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('site_id', sa.Text(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Text(), nullable=True),
    sa.Column('work_time', sa.Text(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('memo', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('company_cost', sa.Integer(), nullable=True),
    sa.Column('customer_price', sa.Integer(), nullable=True),
    sa.Column('additional_cost', sa.Integer(), nullable=True),
    sa.Column('modify_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_works_company_id_companies'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name=op.f('fk_works_service_id_services'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], name=op.f('fk_works_site_id_sites'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['statuses.id'], name=op.f('fk_works_status_id_statuses'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_works'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('works')
    op.drop_table('estimate_items')
    op.drop_table('sites')
    op.drop_table('service_options')
    op.drop_table('estimate_services')
    op.drop_table('companies')
    op.drop_table('taxes')
    op.drop_table('statuses')
    op.drop_table('services')
    op.drop_table('estimates')
    # ### end Alembic commands ###
